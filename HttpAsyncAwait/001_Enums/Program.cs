using System;
//Перечисления.

//Перечисление - это набор именованных констан, которые хранять числовое значение.
//Перечисление определяет именованные константы, каждой из которых соответствует числовое значение.
//Все перечисления в C# происходят от единого Базового класса System.Enum

//Все перечисления наследуются от абстрактного класса Enum=> ValueType => Object
namespace _001_Enums
{
    //При компиляции - компилятор подставляет вместо имен,
    //установленные им в соответствие числовые значения. [имя] = [число]
    //По умолчанию типом данных констант перечисления будет INT.
    //Можно использовать любой целый тип данных C# (byte, sbyte, short, ushort, int, uint, long, ulong)

    //struct MyStruct
    //{
    //    public const byte zero=0;
    //    public const byte one = 1;
    //    public const byte two=2;
    //    public const byte three=3;
    //}
    //На 23 строке мы создаем перечисление с именем MyEnum, которое содержит 4 именованных константы
    // и мы этим константам присваиваем некоторое значение.
    enum MyEnum : byte // Явно указываем использовать тип byte. Если не укажем - по умолчанию INT
    { // после : мы указываем НЕ НАСЛЕДОВАНИЕ, НЕ РЕАЛИЗАЦИЮ, а общий тип для каждой константы.
        Zero = 0,
        One = 1,
        Two = 2,
        Three = 3
    }
    class Program
    {
        static void Main(string[] args)
        {
            //Если мы просто указывааем константу - выводится ее имя.
            //Если мы указываем константу с оператором приведения - выводится ее значение.
            Console.WriteLine(MyEnum.One); //Ведедется ИМЯ, а НЕ ЗНАЧЕНИЕ
            Console.WriteLine((byte)MyEnum.One); //используем оператор явного приведения=> Выведется значение

            MyEnum digit = MyEnum.Zero;
            Console.WriteLine(digit); //Ведедется ИМЯ, а НЕ ЗНАЧЕНИЕ
            Console.WriteLine((byte)digit); //Выведется значение

            //Delay
            Console.ReadKey();
        }
    }
}
